{"version":3,"sources":["components/Header/Header.js","components/Jumbotron/Jumbotron.js","components/Image/Image.js","components/Footer/Footer.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","href","loser","score","topScore","Jumbotron","Image","src","alt","onClick","id","Footer","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","images","clicked","shake","visible","shuffle","bind","assertThisInitialized","clickHandler","array","newArray","slice","i","length","j","Math","floor","random","temp","setState","event","includes","target","push","_this2","components_Header_Header","react_transition_group","in","timeout","classNames","onEnter","components_Jumbotron_Jumbotron","map","image","key","components_Image_Image","name","components_Footer_Footer","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.131d2a71.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = props => (\r\n  <nav className=\"navbar fixed-top\">\r\n    <div className=\"nav navbar-nav navbar-left\">\r\n      <a href=\"/\">Clicky Game</a>\r\n    </div>\r\n    <div className=\"nav navbar-nav navbar-center\">\r\n      <span className=\"navbar-text\">Click on a Laker legend to start game</span>\r\n    </div>\r\n    <div className=\"nav navbar-nav navbar-right text-light\">\r\n      <form className=\"form-inline\">\r\n        {props.loser}\r\n        <span className=\"score\">Score: {props.score} | Top Score: {props.topScore} </span>\r\n      </form>\r\n    </div>\r\n  </nav>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Jumbotron.css\";\r\n\r\nconst Jumbotron = props => (\r\n  <div className=\"jumbotron jumbotron-fluid\">\r\n    <div className=\"container text-center\">\r\n      <h1>Lakers Mt.Rushmore</h1>\r\n      <p>Start by clicking on any Lakers legend, but avoid clicking on the same one!</p> \r\n    </div>\r\n  </div>\r\n);\r\nexport default Jumbotron;","import React from \"react\";\r\nimport \"./Image.css\";\r\n\r\nconst Image = props => (\r\n  <img className=\"pic\" src={\"images/\" + props.src} alt=\"test\" onClick={props.onClick} id={props.id}/>\r\n);\r\n\r\nexport default Image;","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = props => (\r\n    <footer>\r\n        <div className=\"color\"></div>\r\n        <span className=\"px-3\">Clicky-Game by Ara 2018</span>\r\n    </footer>\r\n);\r\n\r\nexport default Footer;","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport Header from \"./components/Header\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport Image from \"./components/Image\";\nimport Footer from \"./components/Footer\";\nimport images from \"./images.json\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: images,\n      score: 0,\n      topScore: 0,\n      clicked: [],\n      shake: false,\n      visible: false\n    };\n    this.shuffle = this.shuffle.bind(this);\n    this.clickHandler = this.clickHandler.bind(this);\n  }\n  shuffle(array) {\n    let newArray = array.slice();\n    for (var i = newArray.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = newArray[i];\n      newArray[i] = newArray[j];\n      newArray[j] = temp;\n    }\n    this.setState({\n      images: newArray\n    });\n  }\n  clickHandler(event) {\n    let array = this.state.clicked.slice();\n    if (array.includes(event.target.id)) {\n      this.setState({\n        images: images,\n        score: 0,\n        clicked: [],\n        shake: true,\n        visible: true\n      });\n    } else {\n      let score = this.state.score;\n      score++;\n      array.push(event.target.id);\n      if (score > this.state.topScore) {\n        this.setState({\n          clicked: array,\n          score: score,\n          topScore: score\n        });\n      } else {\n        this.setState({\n          clicked: array,\n          score: score\n        });\n      }\n      this.shuffle(this.state.images);\n    }\n  }\n  render() {\n    return (     \n      <div>\n        <Header \n          score={this.state.score} \n          topScore={this.state.topScore} \n          loser={\n            <CSSTransition\n              in={this.state.visible}\n              timeout={2000}\n              classNames=\"fade\"\n              onEnter={() => {\n                this.setState({\n                  visible: false\n                });\n              }}\n            >\n              <span className=\"loser mr-4\">You Lose</span>\n            </CSSTransition>\n          }\n        /> \n        <Jumbotron/>\n        <div className=\"container\">\n          <TransitionGroup\n            className=\"image-group\"\n          >\n            <div className=\"row\">\n              {this.state.images.map(image => (\n                <CSSTransition\n                  in={this.state.shake}\n                  key={image.id}\n                  timeout={1000}\n                  classNames=\"shake\"\n                  onEnter={() => {\n                    this.setState({\n                      shake: false,\n                    });\n                  }}\n                >\n                  <div className=\"col-md-3\" >\n                    <Image\n                      onClick={this.clickHandler}\n                      id={image.id}\n                      name={image.name}\n                      src={image.src}\n                    />\n                  </div>\n                  </CSSTransition>\n              ))}\n            </div>\n          </ TransitionGroup>\n        </div>\n        <br/>\n        <Footer />\n      </div>  \n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}